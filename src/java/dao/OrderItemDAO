package dal;

import context.DBContext;
import model.OrderItem;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class OrderItemDAO extends DBContext {

    // Thêm item vào đơn hàng
    public boolean addOrderItem(OrderItem item) {
        String sql = "INSERT INTO OrderItem (OrderID, ProductID, Quantity, Price) VALUES (?, ?, ?, ?)";
        try (PreparedStatement st = connection.prepareStatement(sql)) {
            st.setInt(1, item.getOrderID());
            st.setInt(2, item.getProductID());
            st.setInt(3, item.getQuantity());
            st.setDouble(4, item.getPrice());
            return st.executeUpdate() > 0;
        } catch (SQLException e) {
            System.out.println("Error in addOrderItem: " + e.getMessage());
        }
        return false;
    }

    // Lấy danh sách item theo OrderID
    public List<OrderItem> getItemsByOrderID(int orderID) {
        List<OrderItem> list = new ArrayList<>();
        String sql = "SELECT oi.*, p.ProductName, p.Image " +
                     "FROM OrderItem oi " +
                     "JOIN Product p ON oi.ProductID = p.ProductID " +
                     "WHERE oi.OrderID = ?";

        try (PreparedStatement st = connection.prepareStatement(sql)) {
            st.setInt(1, orderID);
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                OrderItem item = new OrderItem();
                item.setOrderItemID(rs.getInt("OrderItemID"));
                item.setOrderID(rs.getInt("OrderID"));
                item.setProductID(rs.getInt("ProductID"));
                item.setQuantity(rs.getInt("Quantity"));
                item.setPrice(rs.getDouble("Price"));

                // Optional fields
                item.setProductName(rs.getString("ProductName"));
                item.setProductImage(rs.getString("Image"));

                list.add(item);
            }
        } catch (SQLException e) {
            System.out.println("Error in getItemsByOrderID: " + e.getMessage());
        }

        return list;
    }

    // Xoá item theo orderItemID (tuỳ chọn)
    public boolean deleteOrderItem(int orderItemID) {
        String sql = "DELETE FROM OrderItem WHERE OrderItemID = ?";
        try (PreparedStatement st = connection.prepareStatement(sql)) {
            st.setInt(1, orderItemID);
            return st.executeUpdate() > 0;
        } catch (SQLException e) {
            System.out.println("Error in deleteOrderItem: " + e.getMessage());
        }
        return false;
    }

    // Xoá tất cả item theo OrderID (khi huỷ đơn)
    public boolean deleteItemsByOrderID(int orderID) {
        String sql = "DELETE FROM OrderItem WHERE OrderID = ?";
        try (PreparedStatement st = connection.prepareStatement(sql)) {
            st.setInt(1, orderID);
            return st.executeUpdate() > 0;
        } catch (SQLException e) {
            System.out.println("Error in deleteItemsByOrderID: " + e.getMessage());
        }
        return false;
    }
}
